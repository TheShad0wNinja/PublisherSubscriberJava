/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package notification;

import remote.NotificationRemote;
import remote.ServiceRemote;
import remote.outputdata.LabelOutput;
import service.Service;

import javax.swing.*;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;

/**
 *
 * @author shadow
 */
public class NotificationUI extends javax.swing.JFrame {
    NotificationRemote notificationRemote;
    ServiceRemote serviceRemote;
    String name;
    /**
     * Creates new form SubscriberUI
     */
    public NotificationUI() {
        initComponents();
        hideComponents();
        try {
            Registry registry = LocateRegistry.getRegistry("localhost", Service.PORT);
            serviceRemote = (ServiceRemote) registry.lookup("service");
            notificationRemote = new NotificationRemoteImpl(new LabelOutput(subCountLabel));
        } catch (RemoteException | NotBoundException e) {
            System.out.println(e.getMessage());
            System.exit(0);
        }
    }

    private void showComponents() {
        subCountLabel.setVisible(true);
        sendBtn.setVisible(true);
        staticLabel.setVisible(true);
        notificationNameLabel.setVisible(true);
        messageInput.setVisible(true);
        registerBtn.setText("Unregister");
        disconnectBtn.setVisible(true);
        notificationNameLabel.setText("Notification Name: " + name);
    }

    private void hideComponents() {
        subCountLabel.setVisible(false);
        sendBtn.setVisible(false);
        staticLabel.setVisible(false);
        notificationNameLabel.setVisible(false);
        messageInput.setVisible(false);
        disconnectBtn.setVisible(false);
        registerBtn.setText("Register/Connect");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        registerBtn = new javax.swing.JButton();
        disconnectBtn = new javax.swing.JButton();
        messageInput = new javax.swing.JTextField();
        staticLabel = new javax.swing.JLabel();
        sendBtn = new javax.swing.JButton();
        subCountLabel = new javax.swing.JLabel();
        notificationNameLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setText("Notification Publisher");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(13, 15, 13, 10);
        getContentPane().add(jLabel1, gridBagConstraints);

        registerBtn.setText("Register");
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 15);
        getContentPane().add(registerBtn, gridBagConstraints);

        disconnectBtn.setText("Disconnect");
        disconnectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnectBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 15);
        getContentPane().add(disconnectBtn, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 15, 10);
        getContentPane().add(messageInput, gridBagConstraints);

        staticLabel.setText("Send Message");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 15, 4, 10);
        getContentPane().add(staticLabel, gridBagConstraints);

        sendBtn.setText("Send");
        sendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 15, 15);
        getContentPane().add(sendBtn, gridBagConstraints);

        subCountLabel.setText("Subscriber Count: 0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 5, 10);
        getContentPane().add(subCountLabel, gridBagConstraints);

        notificationNameLabel.setText("Notification Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 5, 10);
        getContentPane().add(notificationNameLabel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
        if (registerBtn.getText().equals("Register/Connect")) {
            do {
                name = JOptionPane.showInputDialog("Enter the name of the notification you want to register");
            } while (name != null && name.isBlank());

            if (name == null)
                return;

            try {
                serviceRemote.registerTopic(name, notificationRemote);
            } catch (RemoteException e) {
                JOptionPane.showMessageDialog(this, "Unable to register notification: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            showComponents();
        } else {
            try {
                serviceRemote.unregisterTopic(name);
            } catch (RemoteException e) {
                JOptionPane.showMessageDialog(this, "Unable to unregister notification: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            hideComponents();
        }
    }//GEN-LAST:event_registerBtnActionPerformed

    private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed
        if (messageInput.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Please enter a valid message", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            serviceRemote.publish(name, messageInput.getText());
            messageInput.setText("");
        } catch (RemoteException e) {
            JOptionPane.showMessageDialog(this, "Unable to publish message: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_sendBtnActionPerformed

    private void disconnectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disconnectBtnActionPerformed
        hideComponents();
    }//GEN-LAST:event_disconnectBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NotificationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NotificationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NotificationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NotificationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NotificationUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton disconnectBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField messageInput;
    private javax.swing.JLabel notificationNameLabel;
    private javax.swing.JButton registerBtn;
    private javax.swing.JButton sendBtn;
    private javax.swing.JLabel staticLabel;
    private javax.swing.JLabel subCountLabel;
    // End of variables declaration//GEN-END:variables
}
